import os
import random
import pandas as pd

random.seed(2021)
dataset_path = "/Volumes/Elements/dataset"



col_names = ['filename','famliy_name']

df = pd.read_csv("dataLabel.csv")
df_dataset_train = pd.DataFrame([],columns=col_names)
df_dataset_test_A = pd.DataFrame([],columns=col_names)
df_dataset_test_B = pd.DataFrame([],columns=col_names)

famliy_l = [
    # 木马
    "Trojan.Win32.fakelpk",
    "Backdoor.Win32.BigWolf",
    "Trojan.Win32.QQPass",
    # 蠕虫
    "Worm.Win32.Sfone.A",
    "Worm.Win32.AllapleGen.A",
    "Worm.Win32.AutoHotkey",
    # 感染式病毒
    "sality",
    # 勒索
    "Trojan..Win32.CerberRansom",
    "Trojan.Ransom.Win32.GandCrab.S",
    # 挖矿
    "Trojan..Win64.CoinMiner.G"
]



for famliy in famliy_l:
    tmp_df = df[df["famliy_name"]==famliy].reset_index(drop=False)

    flag = 0
    for small_famliy_name,nums in tmp_df['small_family_name'].value_counts().items():
        flag = 1
        part_nums = nums//random.randint(3,5)
        df_dataset_train = pd.concat([df_dataset_train,pd.DataFrame(tmp_df.loc[:part_nums,:],columns=col_names)])
        df_dataset_test_A = pd.concat([df_dataset_test_A,pd.DataFrame(tmp_df.loc[part_nums:2*part_nums,:],columns=col_names)])
        df_dataset_test_B = pd.concat([df_dataset_test_B,pd.DataFrame(tmp_df.loc[2*part_nums:3*part_nums,:],columns=col_names)])
    if flag==0:
        nums = tmp_df.shape[0]
        part_nums = nums//random.randint(3,5)
        df_dataset_train = pd.concat([df_dataset_train,pd.DataFrame(tmp_df.loc[:part_nums,:],columns=col_names)])
        df_dataset_test_A = pd.concat([df_dataset_test_A,pd.DataFrame(tmp_df.loc[part_nums:2*part_nums,:],columns=col_names)])
        df_dataset_test_B = pd.concat([df_dataset_test_B,pd.DataFrame(tmp_df.loc[2*part_nums:3*part_nums,:],columns=col_names)])
df_dataset_train.to_csv(os.path.join(dataset_path,"train/train_Label.csv"),index=False)
df_dataset_test_A.to_csv(os.path.join(dataset_path,"test_A/test_A_Label.csv"),index=False)
df_dataset_test_B.to_csv(os.path.join(dataset_path,"test_B/test_B_Label.csv"),index=False)


df_dataset_train = pd.read_csv(os.path.join(dataset_path,"train/train_Label.csv"))
df_dataset_test_A = pd.read_csv(os.path.join(dataset_path,"test_A/test_A_Label.csv"))
df_dataset_test_B = pd.read_csv(os.path.join(dataset_path,"test_B/test_B_Label.csv"))

for i,filename in df_dataset_train["filename"].items():
    input_file = os.path.join(df[df['filename']==filename]["file_path"].values[0],filename)
    output_file = os.path.join(dataset_path,"train/origin_data/")
    command = "cp '{}' '{}'".format(input_file,output_file)

    return_code = os.system(command)
    if return_code!=0:
        print(command)
for i,filename in df_dataset_test_A["filename"].items():
    input_file = os.path.join(df[df['filename']==filename]["file_path"].values[0],filename)
    output_file = os.path.join(dataset_path,"test_A/origin_data/")
    command = "cp '{}' '{}'".format(input_file,output_file)
    return_code = os.system(command)
    if return_code!=0:
        print(command)

for i,filename in df_dataset_test_B["filename"].items():
    input_file = os.path.join(df[df['filename']==filename]["file_path"].values[0],filename)
    output_file = os.path.join(dataset_path,"test_B/origin_data/")
    command = "cp '{}' '{}'".format(input_file,output_file)
    return_code = os.system(command)
    if return_code!=0:
        print(command)

#print(df_dataset_train['famliy_name'].value_counts())


